<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class SessionStep extends \App\Entity\SessionStep implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'id', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'session', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'isActive', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'step', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'questionDone', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'questionTrue', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'toolSessionAnswers', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'nbQuestion', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'nbBackground', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'sessionStepBackgrounds'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'id', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'session', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'isActive', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'step', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'questionDone', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'questionTrue', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'toolSessionAnswers', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'nbQuestion', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'nbBackground', '' . "\0" . 'App\\Entity\\SessionStep' . "\0" . 'sessionStepBackgrounds'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (SessionStep $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getSession(): ?\App\Entity\Session
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSession', []);

        return parent::getSession();
    }

    /**
     * {@inheritDoc}
     */
    public function setSession(?\App\Entity\Session $session): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSession', [$session]);

        return parent::setSession($session);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', []);

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive(bool $isActive): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', [$isActive]);

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getStep(): ?\App\Entity\Step
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStep', []);

        return parent::getStep();
    }

    /**
     * {@inheritDoc}
     */
    public function setStep(?\App\Entity\Step $step): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStep', [$step]);

        return parent::setStep($step);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuestionDone(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuestionDone', []);

        return parent::getQuestionDone();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuestionDone(int $questionDone): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuestionDone', [$questionDone]);

        return parent::setQuestionDone($questionDone);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuestionTrue(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuestionTrue', []);

        return parent::getQuestionTrue();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuestionTrue(int $questionTrue): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuestionTrue', [$questionTrue]);

        return parent::setQuestionTrue($questionTrue);
    }

    /**
     * {@inheritDoc}
     */
    public function getToolSessionAnswers(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToolSessionAnswers', []);

        return parent::getToolSessionAnswers();
    }

    /**
     * {@inheritDoc}
     */
    public function addToolSessionAnswer(\App\Entity\ToolSessionAnswer $toolSessionAnswer): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addToolSessionAnswer', [$toolSessionAnswer]);

        return parent::addToolSessionAnswer($toolSessionAnswer);
    }

    /**
     * {@inheritDoc}
     */
    public function removeToolSessionAnswer(\App\Entity\ToolSessionAnswer $toolSessionAnswer): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeToolSessionAnswer', [$toolSessionAnswer]);

        return parent::removeToolSessionAnswer($toolSessionAnswer);
    }

    /**
     * {@inheritDoc}
     */
    public function incQuestionTrue(): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'incQuestionTrue', []);

        return parent::incQuestionTrue();
    }

    /**
     * {@inheritDoc}
     */
    public function incQuestionDone(): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'incQuestionDone', []);

        return parent::incQuestionDone();
    }

    /**
     * {@inheritDoc}
     */
    public function getNbQuestion(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbQuestion', []);

        return parent::getNbQuestion();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbQuestion(int $nbQuestion): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbQuestion', [$nbQuestion]);

        return parent::setNbQuestion($nbQuestion);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbBackground(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbBackground', []);

        return parent::getNbBackground();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbBackground(int $nbBackground): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbBackground', [$nbBackground]);

        return parent::setNbBackground($nbBackground);
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionStepBackgrounds(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionStepBackgrounds', []);

        return parent::getSessionStepBackgrounds();
    }

    /**
     * {@inheritDoc}
     */
    public function addSessionStepBackground(\App\Entity\SessionStepBackground $sessionStepBackground): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSessionStepBackground', [$sessionStepBackground]);

        return parent::addSessionStepBackground($sessionStepBackground);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSessionStepBackground(\App\Entity\SessionStepBackground $sessionStepBackground): \App\Entity\SessionStep
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSessionStepBackground', [$sessionStepBackground]);

        return parent::removeSessionStepBackground($sessionStepBackground);
    }

}
