/// <reference types="node" />
import { Data } from './types';
import { VirgilPrivateKey } from './VirgilPrivateKey';
import { VirgilPublicKey } from './VirgilPublicKey';
export declare class VirgilStreamSignAndEncrypt {
    private _isRunning;
    private _isFinished;
    private _isDisposed;
    private readonly recipientCipher;
    private readonly aes256Gcm;
    private readonly sha512;
    private readonly randomPadding;
    private readonly paddingParams;
    get isRunning(): boolean;
    get isFinished(): boolean;
    get isDisposed(): boolean;
    constructor(arg0: VirgilPrivateKey, arg1: VirgilPublicKey | VirgilPublicKey[], arg2?: boolean);
    start(length: number): Buffer;
    update(data: Data): Buffer;
    final(dispose?: boolean): Buffer;
    dispose(): void;
    private ensureLegalState;
    private ensureIsRunning;
}
